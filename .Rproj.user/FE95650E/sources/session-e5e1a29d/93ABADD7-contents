
# USA Bachelor's Immigrants -----------------------------------------------

# bthrgn: birth region: US and continents
# bthst: place of birth: state/country
# bthus: place of brith: US/non-US
# 
#
# hsst: location of high school: state/country
# badgrus: location of first ba: US/non-US
# bargn: location of first BA: US and continents
# bast: location of first BA: state/country
# hddgrus: location of highest degree: US/non-US
# hdrgn: location of highest degree: US and continents
# hdst: location of highest degree: state/country
# mrdgrus: location of most recent degree: US/non-US
# mrrgn: location of most recent degree: US and continent
# mrst: location of most recent degree: state/country
#
# ctzdual: dual citizen
# ctzfor: visa type for non-US citizens (permanent or temporary)
# ctzn: citizenship (ctzn:native/naturalized; nonctzn: perm/temp)
# ctzus: citizenship: born US/born abroad by Americans/by naturalization
# ctzusin: US citizenship: yes/no
#
# emus: employer location: US/non-US
# emst: employer state/country 
#
# fncrgn: continent of foreign citizenship
# fnccd: country of foreign citizenship
#
# resplcus: respondent location: US/non-US
# resploc: respondent location: american region
#
# facloc:importance of job's location
# satloc: satisfaction of job's location
# nrloc: reason for working outside field of highest degree: location
# 
# nbamed: field of study, first BA
# nbamemg: field of study, first BA, major group
# ndgrmed: field of study, highest degree
# ndgmemg: field of study, highest degree, major group
# nmrmed: field of study, most recent degree
# nmrmemg: field of study, most recent degree, major group



# Libraries ---------------------------------------------------------------
library(dplyr)
library(plm)
library(AER)  # for ivreg and other econometric functions
library(foreign)  # for data import
library(car)  # for diagnostic tests



# Import ------------------------------------------------------------------

nscg_13a21 <- readRDS("C:/data/nscg/nscg_13a21.rds")
nscg <- nscg_13a21

# Country-level English speaking proficiency 
df_english <- readRDS("C:/00_research/nscg/american_ba_immigrants/df_english.rds")

# Historical exchange rates - country x to USA
df_xrate <- readRDS("C:/00_research/nscg/american_ba_immigrants/df_xrate.rds")


# Clean -------------------------------------------------------------------
# Remove: 
# - Missing first BA
# - Missing or unknown whether recieved BA-level degree
# - Those who have never worked for pay or profit 
nscg <- nscg %>% filter(badgrus != "M", 
                        badgrus != "L",
                        baind != "N",
                        lwnvr != "Y")
count(nscg)/count(nscg_13a21)-1

nscg <- nscg %>% mutate(salary = salary + 1, 
                        earn = earn + 1)

# 2013 surpressed US degrees as "000"; the rest used "009"
nscg <- nscg %>% mutate(bast = if_else(bast == "000", "099", bast),
                        hdst = if_else(hdst == "000", "099", hdst),
                        mrst = if_else(mrst == "000", "099", mrst))

#! Try a separate subset without removing the badgrus==M or L


# Variable Creation -------------------------------------------------------

# BA in USA
# badgrus: location of first ba: US/non-US
# remove missing: 
nscg <- nscg %>% mutate(baus = if_else(badgrus == "Y", 1, 0))

# Graduate-degree holder: Most Recent Degree from US
nscg <- nscg %>% mutate(grdgrus = if_else(dgrdg > 1 & mrdgrus == "Y", 1, 0))

# BA from non-USA but English-speaking country
# English Proficiency of Country of First BA degree
nscg <- nscg %>% left_join(df_english, by = c("bast" = "country_id"))
nscg <- nscg %>% mutate(bast_engl = english_proficiency)
nscg <- nscg %>% mutate(bast_country = country)
nscg$bast_country <- as.factor(nscg$bast_country)
nscg$bast_country <- relevel(nscg$bast_country, ref = "United States")


nscg <- nscg %>% mutate(bast_engl = if_else(country == "United States", "American English", bast_engl))



nscg2 <- nscg %>% 
  select(c(baus, age, gender, salary, wrkg)) %>% 
  filter(gender == "M") %>% 
  mutate(male = if_else(gender == "M", 1, 0),
         sal0 = if_else(salary == 0, 1, 0)) %>% 
  arrange(desc(salary))

print(head(nscg2))



# Variable Explorer: Categorical
nscg2 %>% 
  group_by(wrkg) %>% 
  summarise(count = n()) %>% 
  mutate(freq = count/sum(count)) 

# Variable Explorer: Continuous
nscg2 %>%
  filter(wrkg == "Y") %>% 
  group_by(baus) %>% 
  summarise(mean_sal = mean(salary),
            median_sal = median(salary),
            sd_sal = sd(salary), 
            max_sal = max(salary),
            min_sal = min(salary))



# Number of children living in household 
# Preteen 0 - 11: 
nscg <- nscg %>% mutate(ch011 = chu2 + ch25 + ch611)
# Teen
# already exists: ch1218


# New Job
nscg <- nscg %>% mutate(newjob = if_else(emsmi == 3 | emsmi == 4, 1, 0))




# Hours worked per year
nscg <- nscg %>% mutate(hrsyr = hrswk * wkswk)

# Full-time worker: (>35 hours)
nscg <- nscg %>% mutate(ftwk = if_else(pjwtft == "L", 1, 0))

# Any working spouse
nscg <- nscg %>% mutate(spowk_any = if_else(spowk == 1 | spowk == 2, 1, 0))

# Immigrant
nscg <- nscg %>% mutate(imm0 = if_else(ctzus != 1, 1, 0),      # Type of citizen: Not born in US (could be born in US or naturalized)
                        imm1 = if_else(ctzusin == "N", 1, 0))  # US citizenship status = N (binary)


# Immigrant starting during college:
# Those who went to high school in the same country they were born 
# and who did not get their bachelor's degree in that country
# and who came to the states for the first time on a temporary visa for study or training
#nscg <- nscg %>% mutate(ba_imm2 = if_else(hsst == bthst & bast != hsst & ctzus != 1, 1, 0))



# American High School:
for (i in 80:99) {
  hsst_value <- sprintf("%03d", i)  # Convert the integer to a 3-digit string
}
nscg <- nscg %>%
  mutate(hsus = ifelse(hsst %in% sprintf("%03d", 80:99), 1, 0))

# FINAL IMMIGRANT DEFINITION
# Not born in the US and didn't go here for high school
nscg <- nscg %>% mutate(ba_imm = if_else(ctzus != 1 & hsus == 0 , 1, 0))



# # another definition: 
# nscg <- nscg %>% mutate(ba_imm = if_else(cmedu == "Y" , 1, 0))


# any grad degree
nscg <- nscg %>% mutate(grdgr_any = if_else(dgrdg>1, 1, 0))


#ctzus == 1: US Citizen, Native. 
#         2: US Citizen, Naturalized
#         3: Non-US Citizen, Permanent Resident
#         4: Non-US Citizen, Temporary Resident



nscg <- nscg %>% mutate(bacarn2 = case_when(bacarn == 11 ~ "0_R1",
                                            bacarn == 12 ~ "1_R2",
                                            bacarn == 13 ~ "1_R2",
                                            bacarn == 14 ~ "1_R2",
                                            bacarn == 21 ~ "2_MC",
                                            bacarn == 22 ~ "2_MC",
                                            bacarn == 31 ~ "3_LA",
                                            bacarn == 32 ~ "3_LA",
                                            bacarn == "L"~ "xLSx",
                                            TRUE ~ "4_Other")
)
nscg <- nscg %>% mutate(ba_la = if_else(bacarn2 == "3_LA", 1, 0))

nscg <- nscg %>% mutate(baus_carn = case_when(baus == 1 & bacarn2 == "0_R1" ~ "0_US_R1",
                                              baus == 1 & bacarn2 == "2_MC" ~ "1_US_MC",
                                              baus == 1 & bacarn2 == "3_LA" ~ "3_US_LA",
                                              baus == 1 & bacarn2 == "4_Other" ~ "3_US_Other",
                                              baus == 1 & bacarn2 == "xLSx" ~ "4_US_xLSx",
                                              baus == 0 ~ "0_Abroad",
                                              TRUE ~ "3_US_Other"))

nscg <- nscg %>% mutate(baus_carn2 = case_when(baus == 1 & bacarn2 == "0_R1" ~ "0_US_R1",
                                              baus == 1 & bacarn2 == "2_MC" ~ "1_US_MC",
                                              baus == 1 & bacarn == 31 ~ "3_US_LA_selective",
                                              baus == 1 & bacarn == 32 ~ "3_US_LA_ba",
                                              baus == 1 & bacarn2 == "4_Other" ~ "3_US_Other",
                                              baus == 1 & bacarn2 == "xLSx" ~ "4_US_xLSx",
                                              baus == 0 ~ "0_Abroad",
                                              TRUE ~ "3_US_Other"))




# Add Exchange Rates by year of high school graduation ------------------- -


# Add exchange rate during the student's year of high school graduation
# New variable xrate used for first stage of selection equation
nscg <- nscg %>% 
  left_join(df_xrate, by = c("hsst" = "country_id", "hsyr" = "year"))



# # More generalized race variable
# nscg <- nscg %>% mutate(race = case_when(racem == 4 ~ 4, 
#                                          racem == 3 ~ 3, 
#                                          racem == 1 ~ 1, 
#                                          TRUE ~ 99))
# 


#calculate min wage




# Filtered Datasets -------------------------------------------------------

# Working
nscg_wrkg <- nscg %>% filter(wrkg == "Y")

# Immigrants only
nscg_imm <- nscg %>% filter(ba_imm == 1)

# Working Immigrants
nscg_wrkgimm <- nscg %>% filter(wrkg == "Y",
                                ba_imm == 1)

# Working Immigrants with Grad Degrees
nscg_wrkgimm_grdgr <- nscg %>% filter(wrkg == "Y",
                                     ba_imm == 1,
                                     dgrdg > 1, 
                                     mrdgrus == "Y")


# Working Immigrants with Master's Degrees
nscg_wrkgimm_ma <- nscg %>% filter(wrkg == "Y",
                                   ba_imm == 1,
                                   dgrdg == 2, 
                                   mrdgrus == "Y")

# Working Immigrants with Professional Degrees
nscg_wrkgimm_prof <- nscg %>% filter(wrkg == "Y",
                                   ba_imm == 1,
                                   dgrdg == 4, 
                                   mrdgrus == "Y")

# Working Immigrants with PhDs
nscg_wrkgimm_phd <- nscg %>% filter(wrkg == "Y",
                                     ba_imm == 1,
                                     dgrdg == 3, 
                                     mrdgrus == "Y")


# Working Immigrants with BAs abroad - Remove NA English Proficiency
nscg_wrkgimm_engl <- nscg %>% filter(wrkg == "Y",
                                     ba_imm == 1,
                                     !is.na(bast_engl))
nscg_wrkgimm_engl$bast_engl <- factor(nscg_wrkgimm_engl$bast_engl, levels = c("Very Low Proficiency", "Low Proficiency", "Moderate Proficiency", "High Proficiency", "Very High Proficiency", "Native", "American English"))
nscg_wrkgimm_engl$bast_engl <- relevel(nscg_wrkgimm_engl$bast_engl, ref = "American English")



# Summary Tables ----------------------------------------------------------

# Variable Explorer: Categorical
nscg_wrkgimm %>% 
  group_by(refyr) %>% 
  summarise(count = n()) %>% 
  mutate(freq = count/sum(count)) 

# Variable Explorer: Continuous
nscg %>%
  filter(wrkg == "Y",
         ba_imm == 1,
         dgrdg == 1) %>% 
  group_by(baus) %>% 
  summarise(mean_sal = mean(salary),
            median_sal = median(salary),
            sd_sal = sd(salary))

# Salary, Earnings, and Hours Worked by BA in US/non-US
nscg %>% 
  filter(wrkg == "Y") %>% 
  group_by(imm3, baus) %>% 
  summarise(mean(salary),
            mean(earn),
            mean(hrsyr))


unique(nscg_wrkgimm$english_proficiency)




# Models ------------------------------------------------------------------
# Without Selection -------------------------------------------------------

# 1: All Working Immigrants
m1 <- lm(log(salary) ~ baus + dgrdg + age + I(age^2) + gender + racem + hispanic + marsta + chlvin + spowk_any + nbamemg + edmom + eddad + factor(refyr), data = nscg_wrkgimm)
summary(m1)
# summary(lm(log(salary) ~ bargn + dgrdg + age + I(age^2) + gender + racem + hispanic + marsta + chlvin + spowk_any + nbamemg + edmom + eddad + factor(refyr), data = nscg_wrkgimm))
# summary(lm(log(salary) ~ bast_country + dgrdg + age + I(age^2) + gender + racem + hispanic + marsta + chlvin + spowk_any + nbamemg + edmom + eddad + factor(refyr), data = nscg_wrkgimm))


# 2: Immigrants with Grad degrees from the US
summary(lm(log(salary) ~ baus + dgrdg + age + I(age^2) + gender + racem + hispanic + marsta + chlvin + spowk_any + nbamemg + edmom + eddad + factor(refyr), data = nscg_wrkgimm_grdgr))

    # 3: Immigrants with Master's Degrees from the US
    summary(lm(log(salary) ~ baus + age + I(age^2) + gender + racem + hispanic + marsta + chlvin + spowk_any + edmom + eddad + factor(refyr), data = nscg_wrkgimm_ma))
    
    # 4: Immigrants with Professional Degrees from the US
    summary(lm(log(salary) ~ baus + age + I(age^2) + gender + racem + hispanic + marsta + chlvin + spowk_any + edmom + eddad + factor(refyr), data = nscg_wrkgimm_prof))
   
    # 5: Immigrants with PhDs from the US
    summary(lm(log(salary) ~ baus + age + I(age^2) + gender + racem + hispanic + marsta + chlvin + spowk_any + edmom + eddad + factor(refyr), data = nscg_wrkgimm_phd))
    

# Is it a language thing? 
    
summary(lm(log(salary) ~ bast_engl + dgrdg + age + I(age^2) + gender + racem + hispanic + marsta + chlvin + spowk_any + nbamemg + edmom + eddad + factor(refyr), data = nscg_wrkgimm_engl))
    
# 1: All Working Immigrants with BAs abroad
summary(lm(log(salary) ~ bast_engl + dgrdg + age + I(age^2) + gender + racem + hispanic + marsta + chlvin + spowk_any + nbamemg + edmom + eddad + factor(refyr), data = nscg_wrkgimm_engl))



# Selection Models --------------------------------------------------------

# First stage: probability of immigrating
# Exclusion restriction: Exchange rate: immigration = f(xrate) but wage != f(xrate)

s1 <- lm(imm0 ~ xrate + gender + racem + hispanic + marsta + chlvin + spowk_any + nbamemg + edmom + eddad , data = nscg_xrate)



# More robust regressions -------------------------------------------------


# Define panel data frame
pdata <- pdata.frame(nscg_wrkgimm, index = "bthst")

# Run the model
fit_plm <- plm(log(salary) ~ baus + dgrdg + age + I(age^2) + gender + racem + hispanic + marsta + chlvin + spowk_any + nbamemg + edmom + eddad + factor(refyr), 
               data = pdata, model = "pooling")

# Get clustered and robust standard errors
summary(fit_plm, vcov = vcovHC(fit_plm, method = "arellano", type = "HC3", cluster = "group"))

